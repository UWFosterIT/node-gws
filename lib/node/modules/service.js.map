{"version":3,"sources":["../../../src/modules/service.js"],"names":["_","require","cheerio","fs","path","request","Service","constructor","config","log","cache","templates","_templates","_options","endpoint","agentOptions","auth","uri","baseUrl","uriCache","replace","cgPath","resolve","__dirname","createGroup","readFileSync","_put","xhtml","etag","Promise","fulfill","reject","options","extend","headers","body","put","err","response","_buildResult","_del","del","_get","cacheMode","debug","get","read","statusCode","write","msg","$","load","message","text","push","trim","missing","find","length","each","error","module","exports"],"mappings":"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","file":"service.js","sourcesContent":["let _       = require('underscore');\nlet cheerio = require('cheerio');\nlet fs      = require('fs');\nlet path    = require('path');\nlet request = require('request');\n\nclass Service {\n  constructor(config) {\n    this.config    = config;\n    this.log       = config.log;\n    this.cache     = config.cache;\n    this.templates = this._templates();\n  }\n\n  _options(endpoint) {\n    return {\n      agentOptions: this.config.auth,\n      uri:          this.config.baseUrl + endpoint,\n      uriCache:     endpoint.replace(/\\//g, '')\n    };\n  }\n\n  _templates() {\n    let cgPath = path.resolve(__dirname, '../../../templates/group-create.html');\n    return {createGroup: fs.readFileSync(cgPath, 'utf-8')};\n  }\n\n  _put(endpoint, xhtml, etag) {\n    return new Promise((fulfill, reject) => {\n      let options = this._options(endpoint);\n      if (xhtml) {\n        _.extend(options.headers, etag);\n        options.body = xhtml;\n      }\n\n      request.put(options, (err, response, body) => {\n        if (err) {\n          reject(err);\n        }\n        fulfill(this._buildResult(response, body));\n      });\n    });\n  }\n\n  _del(endpoint) {\n    return new Promise((fulfill, reject) => {\n      let options = this._options(endpoint);\n\n      request.del(options, (err, response, body) => {\n        if (err) {\n          reject(err);\n        }\n        fulfill(this._buildResult(response, body));\n      });\n    });\n  }\n\n  _get(endpoint) {\n    return new Promise((fulfill, reject) => {\n      // wild    no load no save\n      // dryrun  load not save\n      // record  load and save\n      let options = this._options(endpoint);\n      if (this.config.cacheMode === 'wild') {\n        this.log.debug(`wild -- ${options.uri}`);\n\n        request.get(options, (err, response, body) => {\n          if (err) {\n            reject(err);\n          }\n          fulfill(this._buildResult(response, body));\n        });\n      } else if (this.config.cacheMode === 'dryrun') {\n        this.log.debug(`dryrun for ${options.uri}`);\n        let body = this.cache.read(options.uriCache);\n        if (body) {\n          let response = {};\n          response.statusCode = 200;\n          fulfill(this._buildResult(response, body));\n        } else {\n\n          request.get(options, (err, response, body) => {\n            if (err) {\n              reject(err);\n            }\n            fulfill(this._buildResult(response, body));\n          });\n        }\n      } else if (this.config.cacheMode === 'record') {\n        this.log.debug(`record -- ${options.uri}`);\n        let body = this.cache.read(options.uriCache);\n        if (body) {\n          let response = {};\n          response.statusCode = 200;\n          fulfill(this._buildResult(response, body));\n        } else {\n\n          request.get(options, (err, response, body) => {\n            if (err) {\n              reject(err);\n            }\n            if (response.statusCode === 200) {\n              this.cache.write(options.uriCache, body, true);\n            }\n            fulfill(this._buildResult(response, body));\n          });\n        }\n      }\n    });\n  }\n\n  _buildResult(response, body) {\n    let err = false;\n    let msg = [];\n    const $ = cheerio.load(body);\n\n    // Not found, unauthorized\n    if (response.statusCode == 404 || response.statusCode == 401) {\n      err = true;\n      // Add and Get return errors in different formats because why not?\n      let message = $('.alert').text();\n      if (message == '') {\n        message = $('.error_message').text();\n      }\n\n      // History (and probably others) don't include error messages because of course.\n      if (message == '') {\n        message = 'Unknown error. Most likely the group does not exist.';\n      }\n\n      msg.push(message.trim());\n    }\n\n    // Invalid netids sent into the Add method are returned in a list in the html\n    let missing = $('.notfoundmembers').find($('.notfoundmember')).length;\n    if (missing > 0) {\n      err = true;\n      $('.notfoundmember').each(function () {\n        msg.push(`${$(this).text()} is not a valid netid`);\n      });\n    }\n\n    // Catch any error not spefically handled above. These can be handled more\n    // specifically and given a better error message if needed.\n    // I'm doing this to make the error field consistently return true\n    if (!err && (response.statusCode < 200 || response.statusCode >= 300)) {\n      err = true;\n      msg.push('An error occured while processing your request.');\n    }\n    return {\n      error:      err,\n      message:    msg,\n      statusCode: response.statusCode,\n      xhtml:      body\n    };\n  }\n}\n\nmodule.exports = Service;\n"]}