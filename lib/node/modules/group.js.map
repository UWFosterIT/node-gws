{"version":3,"sources":["../../../src/modules/group.js"],"names":["cheerio","require","Service","Group","constructor","config","_entities","selector","query","list","each","item","id","text","type","attr","push","get","opt","_get","then","result","$","load","xhtml","group","authnFactor","classification","contact","courseCurr","courseNo","courseQtr","courseSect","courseSLN","courseYear","createTime","dependsOn","description","emailEnabled","gid","memberModifyTime","modifyTime","publishEmail","regid","reportToOrig","title","names","admins","updaters","creators","readers","senders","viewers","optIns","optOuts","courseInstructors","data","create","etag","eval","templates","createGroup","_put","del","_del","exchangeEnable","sender","history","items","i","attribs","activity","move","newStem","module","exports"],"mappings":"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","file":"group.js","sourcesContent":["let cheerio = require('cheerio');\nlet Service = require('./service');\n\nclass Group extends Service {\n  constructor(config) {\n    super(config);\n  }\n\n  _entities(selector, query) {\n    let list = [];\n    query('li', selector).each(function () {\n      let item = {\n        id:   query(this).text(),\n        type: query(this).attr('type')\n      };\n      list.push(item);\n    });\n\n    return list;\n  }\n\n  get(opt) {\n    return this._get(`group/${opt.id}`)\n      .then(result => {\n        let $ = cheerio.load(result.xhtml);\n        let group = {\n          authnFactor:      $('.authnfactor').text(),\n          classification:   $('.classification').text(),\n          contact:          $('.contact').text(),\n          courseCurr:       $('.course_curr').text(),\n          courseNo:         $('.course_no').text(),\n          courseQtr:        $('.course_qtr').text(),\n          courseSect:       $('.course_sect').text(),\n          courseSLN:        $('.course_sln').text(),\n          courseYear:       $('.course_year').text(),\n          createTime:       $('.createtime').text(),\n          dependsOn:        $('.dependson').text(),\n          description:      $('.description').text(),\n          emailEnabled:     $('.emailenabled').text(),\n          gid:              $('.gid').text(),\n          memberModifyTime: $('.membermodifytime').text(),\n          modifyTime:       $('.modifytime').text(),\n          publishEmail:     $('.publishemail').text(),\n          regid:            $('.regid').text(),\n          reportToOrig:     $('.reporttoorig').text(),\n          title:            $('.title').text()\n        };\n\n        group.names             = this._entities('.names', $);\n        group.admins            = this._entities('.admins', $);\n        group.updaters          = this._entities('.updaters', $);\n        group.creators          = this._entities('.creators', $);\n        group.readers           = this._entities('.readers', $);\n        group.senders           = this._entities('.authorigs', $);\n        group.viewers           = this._entities('.viewers', $);\n        group.optIns            = this._entities('.optins', $);\n        group.optOuts           = this._entities('.optouts', $);\n        group.courseInstructors = this._entities('.course_instructors', $);\n\n        result.data = group;\n        return result;\n      });\n  }\n\n  create(opt) {\n    let etag = {\n      'ETag':     '',\n      'if-match': '*'\n    };\n\n    // eval isn't bad, reading in an xhtml template as a string literal with opt\n    // see the respective template for how the options are used\n    let xhtml = eval(`\\`${this.templates.createGroup}\\``);\n    return this._put(`group/${opt.id}`, xhtml, etag);\n  }\n\n  del(opt) {\n    return this._del(`group/${opt.id}`);\n  }\n\n  exchangeEnable(opt) {\n    return this._put(`group/${opt.id}/affiliate/email?status=active&sender=${opt.sender}`);\n  }\n\n  history(opt) {\n    return this._get(`group/${opt.id}/history`)\n      .then(result => {\n        let $ = cheerio.load(result.xhtml);\n\n        let items   = $('li');\n        let history = [];\n\n        for (let i in items) {\n          if (items[i].attribs && items[i].attribs.activity === 'membership') {\n            history.push(items[i].attribs);\n          }\n        }\n\n        result.data = history;\n        return result;\n      });\n\n  }\n\n  move(opt) {\n    return this._put(`groupMove/${opt.id}?newstem=${opt.newStem}`);\n  }\n}\n\nmodule.exports = Group;\n"]}