{"version":3,"sources":["../../../src/modules/membership.js"],"names":["cheerio","require","Service","Membership","constructor","config","get","opt","membership","effective","_get","id","then","result","$","load","xhtml","members","each","anchor","children","first","item","netid","text","type","attr","push","data","add","Array","isArray","join","_put","del","msg","error","message","statusCode","_del","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,UAAUD,QAAQ,WAAR,CAAd;;AAEA,MAAME,UAAN,SAAyBD,OAAzB,CAAiC;AAC/BE,cAAYC,MAAZ,EAAoB;AAClB,UAAMA,MAAN;AACD;;AAEDC,MAAIC,GAAJ,EAAS;AACP,QAAIC,aAAa,QAAjB;AACA,QAAID,IAAIE,SAAR,EAAmB;AACjBD,mBAAa,kBAAb;AACD;;AAED,WAAO,KAAKE,IAAL,CAAW,SAAQH,IAAII,EAAG,IAAGH,UAAW,EAAxC,EACJI,IADI,CACCC,UAAU;AACd,UAAIC,IAAId,QAAQe,IAAR,CAAaF,OAAOG,KAApB,CAAR;AACA,UAAIC,UAAU,EAAd;;AAEAH,QAAE,IAAF,EAAQ,UAAR,EAAoBI,IAApB,CAAyB,YAAY;AACnC,YAAIC,SAASL,EAAE,IAAF,EAAQM,QAAR,GAAmBC,KAAnB,EAAb;AACA,YAAIC,OAAO;AACTC,iBAAOJ,OAAOK,IAAP,EADE;AAETC,gBAAON,OAAOO,IAAP,CAAY,MAAZ;AAFE,SAAX;;AAKAT,gBAAQU,IAAR,CAAaL,IAAb;AACD,OARD;;AAUAT,aAAOe,IAAP,GAAcX,OAAd;AACA,aAAOJ,MAAP;AACD,KAjBI,CAAP;AAkBD;;AAEDgB,MAAItB,GAAJ,EAAS;AACP,QAAIuB,MAAMC,OAAN,CAAcxB,IAAIgB,KAAlB,CAAJ,EAA8B;AAC5BhB,UAAIgB,KAAJ,GAAYhB,IAAIgB,KAAJ,CAAUS,IAAV,CAAe,GAAf,CAAZ;AACD;;AAED,WAAO,KAAKC,IAAL,CAAW,SAAQ1B,IAAII,EAAG,WAAUJ,IAAIgB,KAAM,EAA9C,EACJX,IADI,CACCC,UAAU;AACd,aAAOA,MAAP;AACD,KAHI,CAAP;AAID;;AAEDqB,MAAI3B,GAAJ,EAAS;AACP,QAAI,CAACA,IAAIgB,KAAT,EAAgB;AACd,UAAIY,MAAM,4CAAV;AACA,aAAO;AACLC,eAAY,IADP;AAELC,iBAAY,CAACF,GAAD,CAFP;AAGLG,oBAAY,GAHP;AAILtB,eAAa;;;4BAGOmB,GAAI;AAPnB,OAAP;AASD;AACD,WAAO,KAAKI,IAAL,CAAW,SAAQhC,IAAII,EAAG,WAAUJ,IAAIgB,KAAM,EAA9C,EACJX,IADI,CACCC,UAAU;AACd,aAAOA,MAAP;AACD,KAHI,CAAP;AAID;AA3D8B;;AA8DjC2B,OAAOC,OAAP,GAAiBtC,UAAjB","file":"membership.js","sourcesContent":["let cheerio = require('cheerio');\nlet Service = require('./service');\n\nclass Membership extends Service {\n  constructor(config) {\n    super(config);\n  }\n\n  get(opt) {\n    let membership = 'member';\n    if (opt.effective) {\n      membership = 'effective_member';\n    }\n\n    return this._get(`group/${opt.id}/${membership}`)\n      .then(result => {\n        let $ = cheerio.load(result.xhtml);\n        let members = [];\n\n        $('li', '.members').each(function () {\n          var anchor = $(this).children().first();\n          let item = {\n            netid: anchor.text(),\n            type:  anchor.attr('type')\n          };\n\n          members.push(item);\n        });\n\n        result.data = members;\n        return result;\n      });\n  }\n\n  add(opt) {\n    if (Array.isArray(opt.netid)) {\n      opt.netid = opt.netid.join(',');\n    }\n\n    return this._put(`group/${opt.id}/member/${opt.netid}`)\n      .then(result => {\n        return result;\n      });\n  }\n\n  del(opt) {\n    if (!opt.netid) {\n      let msg = 'Member delete must include a list of id(s)';\n      return {\n        error:      true,\n        message:    [msg],\n        statusCode: 400,\n        xhtml:      `<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n                    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n                    <head><title>Bad Request</title></head>\n                    <body>${msg}</body></html>`\n      };\n    }\n    return this._del(`group/${opt.id}/member/${opt.netid}`)\n      .then(result => {\n        return result;\n      });\n  }\n}\n\nmodule.exports = Membership;\n"]}