{"version":3,"sources":["../../src/index.js"],"names":["fs","require","Group","log4js","Membership","MicroCache","Search","readCertificate","cert","key","existsSync","Error","readFileSync","rejectUnauthorized","UWGWS","initialize","options","config","auth","cache","cachePath","logLevel","cacheExt","configure","appenders","out","layout","type","categories","default","level","process","env","LOG_LEVEL","log","getLogger","group","membership","search","module","exports"],"mappings":";;AAAA,IAAIA,KAAaC,QAAQ,IAAR,CAAjB;AACA,IAAIC,QAAaD,QAAQ,iBAAR,CAAjB;AACA,IAAIE,SAAaF,QAAQ,QAAR,CAAjB;AACA,IAAIG,aAAaH,QAAQ,sBAAR,CAAjB;AACA,IAAII,aAAaJ,QAAQ,aAAR,CAAjB;AACA,IAAIK,SAAaL,QAAQ,kBAAR,CAAjB;;AAEA,SAASM,eAAT,CAAyBC,OAAO,EAAhC,EAAoCC,MAAM,EAA1C,EAA8C;AAC5C,MAAID,SAAS,EAAT,IAAeC,QAAQ,EAAvB,IACA,CAACT,GAAGU,UAAH,CAAcF,IAAd,CADD,IACwB,CAACR,GAAGU,UAAH,CAAcD,GAAd,CAD7B,EACiD;AAC/C,UAAM,IAAIE,KAAJ,CAAW,eAAcH,IAAK,WAAUC,GAAI,mBAA5C,CAAN;AACD;;AAED,SAAO;AACLD,UAAoBR,GAAGY,YAAH,CAAgBJ,IAAhB,CADf;AAELC,SAAoBT,GAAGY,YAAH,CAAgBH,GAAhB,CAFf;AAGLI,wBAAoB;AAHf,GAAP;AAKD;;AAED,IAAIC,QAAQ;AACVC,aAAWC,OAAX,EAAoB;AAClB,QAAIC,SAASD,OAAb;AACAC,WAAOC,IAAP,GAAcX,gBAAgBS,QAAQR,IAAxB,EAA8BQ,QAAQP,GAAtC,CAAd;;AAEAQ,WAAOE,KAAP,GAAe,IAAId,UAAJ,CACbW,QAAQI,SADK,EAEbJ,QAAQK,QAFK,EAGbL,QAAQM,QAHK,CAAf;;AAMAnB,WAAOoB,SAAP,CAAiB;AACfC,iBAAW;AACTC,aAAK;AACHC,kBAAQ,EAACC,MAAM,SAAP,EADL;AAEHA,gBAAQ;AAFL;AADI,OADI;AAOfC,kBAAY;AACVC,iBAAS;AACPL,qBAAW,CAAC,KAAD,CADJ;AAEPM,iBAAWC,QAAQC,GAAR,CAAYC,SAAZ,IAAyBhB,OAAOI,QAAhC,IAA4C;AAFhD;AADC;AAPG,KAAjB;;AAeAJ,WAAOiB,GAAP,GAAa/B,OAAOgC,SAAP,EAAb;;AAEA,SAAKC,KAAL,GAAkB,IAAIlC,KAAJ,CAAUe,MAAV,CAAlB;AACA,SAAKoB,UAAL,GAAkB,IAAIjC,UAAJ,CAAea,MAAf,CAAlB;AACA,SAAKqB,MAAL,GAAkB,IAAIhC,MAAJ,CAAWW,MAAX,CAAlB;;AAEA,WAAO,IAAP;AACD;AAjCS,CAAZ;;AAoCAsB,OAAOC,OAAP,GAAiB1B,KAAjB","file":"index.js","sourcesContent":["let fs         = require('fs');\nlet Group      = require('./modules/group');\nlet log4js     = require('log4js');\nlet Membership = require('./modules/membership');\nlet MicroCache = require('micro-cache');\nlet Search     = require('./modules/search');\n\nfunction readCertificate(cert = '', key = '') {\n  if (cert === '' || key === '' ||\n      !fs.existsSync(cert) || !fs.existsSync(key)) {\n    throw new Error(`Client cert ${cert} or key ${key} can not be found`);\n  }\n\n  return {\n    cert:               fs.readFileSync(cert),\n    key:                fs.readFileSync(key),\n    rejectUnauthorized: false\n  };\n}\n\nlet UWGWS = {\n  initialize(options) {\n    let config = options;\n    config.auth = readCertificate(options.cert, options.key);\n\n    config.cache = new MicroCache(\n      options.cachePath,\n      options.logLevel,\n      options.cacheExt\n    );\n\n    log4js.configure({\n      appenders: {\n        out: {\n          layout: {type: 'colored'},\n          type:   'stdout',\n        }\n      },\n      categories: {\n        default: {\n          appenders: ['out'],\n          level:     process.env.LOG_LEVEL || config.logLevel || 'info'\n        }\n      }\n    });\n\n    config.log = log4js.getLogger();\n\n    this.group      = new Group(config);\n    this.membership = new Membership(config);\n    this.search     = new Search(config);\n\n    return this;\n  }\n};\n\nmodule.exports = UWGWS;\n"]}